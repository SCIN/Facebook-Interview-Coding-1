405. Convert a Number to Hexadecimal

Given an integer, write an algorithm to convert it to hexadecimal. 
For negative integer, twoâ€™s complement method is used.


All letters in hexadecimal (a-f) must be in lowercase.
The hexadecimal string must not contain extra leading 0s. If the number is zero, it is represented by a single zero character '0'; otherwise, the first character in the hexadecimal string will not be the zero character.
The given number is guaranteed to fit within the range of a 32-bit signed integer.
You must not use any method provided by the library which converts/formats the number to hex directly.

O(logn) base 16
string toHex(int num) {
    char digits[16]={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};
    if (num == 0) { return "0"; }
    string ret = "";
    // long n = (num < 0) ? (long(2) << 31) + num: num;
    long n = static_cast<unsigned>(num);
    while (n) {
        ret = digits[n % 16] + ret;
        n /= 16;
    }
    return ret;
}
