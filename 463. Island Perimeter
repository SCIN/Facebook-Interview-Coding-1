463. Island Perimeter

int islandPerimeter(vector<vector<int>>& grid) {
    int ret = 0;
    for (int i = 0;i < grid.size(); i++) {
        for (int j = 0; j < grid[0].size(); j++) {
            if (grid[i][j] == 1) {
                dfs(grid, i, j, ret);
                break;
            }
        }
    }
    return ret;
}
void dfs(vector<vector<int>>& grid, int row, int col, int& perimeter) {
    if (row < 0 || col < 0 || row >= grid.size() || col >= grid[0].size() || grid[row][col] != 1) return;
    if (row == 0) perimeter++;
    if (col == 0) perimeter++;
    if (row == grid.size() - 1) perimeter++;
    if (col == grid[0].size() - 1) perimeter++;
    if (row - 1 >= 0 && grid[row - 1][col] == 0) perimeter++;
    if (col - 1 >= 0 && grid[row][col - 1] == 0) perimeter++;
    if (row + 1 < grid.size() && grid[row + 1][col] == 0) perimeter++;
    if (col + 1 < grid[0].size() && grid[row][col + 1] == 0) perimeter++;
    grid[row][col] = -1;
    dfs(grid, row - 1, col, perimeter);
    dfs(grid, row, col - 1, perimeter);
    dfs(grid, row + 1, col, perimeter);
    dfs(grid, row, col + 1, perimeter);
}
