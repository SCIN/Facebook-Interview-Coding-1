4. Median of Two Sorted Arrays

double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
    int lenA = nums1.size();
    int lenB = nums2.size();
    int len = lenA + lenB;
    if (lenA > lenB) return findMedianSortedArrays(nums2, nums1);
    if (lenA == 0) return (double) ((double) nums2[lenB / 2] + (double) nums2[(lenB - 1) / 2]) / 2;
    int start = 0;
    int end = lenA;
    while (start <= end) {
        int midA = (start + end) / 2;
        int midB = (len + 1) / 2 - midA;
        double L1 = (midA == 0) ? INT_MIN : nums1[midA - 1];
        double L2 = (midB == 0) ? INT_MIN : nums2[midB - 1];
        double R1 = (midA == lenA) ? INT_MAX : nums1[midA];
        double R2 = (midB == lenB) ? INT_MAX : nums2[midB];
        if (L1 > R2) {
            end = midA - 1;
        } else if (L2 > R1) {
            start = midA + 1;
        } else {
            if (len % 2 == 0) {
                return (max(L1, L2) + min(R1, R2)) / 2;
            } else {
                return max(L1, L2);
            }
        }
    }
    return -1;
}
