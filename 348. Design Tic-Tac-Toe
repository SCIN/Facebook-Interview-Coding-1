348. Design Tic-Tac-Toe

class TicTacToe {
public:
    /** Initialize your data structure here. */
    TicTacToe(int n) : row_count(n), col_count(n), total(n) {
    
    }
    
    /** Player {player} makes a move at ({row}, {col}).
        @param row The row of the board.
        @param col The column of the board.
        @param player The player, can be either 1 or 2.
        @return The current winning condition, can be either:
                0: No one wins.
                1: Player 1 wins.
                2: Player 2 wins. */
    int move(int row, int col, int player) {
        int add = player == 1 ? 1 : -1;
        diag += row == col ? add : 0;
        anti_diag += row == total - col - 1 ? add : 0;
        row_count[row] += add;
        col_count[col] += add;
        if (abs(row_count[row]) == total || abs(col_count[col]) == total || abs(diag) == total || abs(anti_diag) == total) return player;
        return 0;
    }
    vector<int> row_count;
    vector<int> col_count;
    int diag = 0;
    int anti_diag = 0;
    int total;
};
