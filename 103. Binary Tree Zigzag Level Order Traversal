103. Binary Tree Zigzag Level Order Traversal

INIT the size of level vector first and fill with indices

vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
    if (!root) return  vector<vector<int>>();
    queue<TreeNode*> q;
    q.push(root);
    bool direction = 0;
    vector<vector<int>> ret;
    while (!q.empty()) {
        int size = q.size();
        vector<int> curr_level(size);
        for (int i = 0; i < size; i++) {
            TreeNode* front = q.front();
            q.pop();
            if (direction == 0) {
                curr_level[i] = front->val;
            } else {
                curr_level[size - i - 1] = front->val;
            }
            if (front->left) {
                q.push(front->left);
            }
            if (front->right) {
                q.push(front->right);
            }
        }
        direction = !direction;
        if (!curr_level.empty()) ret.push_back(curr_level);
    }
    return ret;
}
